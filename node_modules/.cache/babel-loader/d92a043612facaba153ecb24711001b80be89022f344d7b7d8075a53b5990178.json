{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmad\\\\Desktop\\\\react\\\\movies\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport NavScrollExample from './components/NavBar';\nimport Container from 'react-bootstrap/esm/Container';\nimport MoviesList from './components/MoviesList';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport MovieDetails from './components/MovieDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [pageCount, setPageCount] = useState(0);\n  const getAllMovies = async () => {\n    const res = await axios.get('https://api.themoviedb.org/3/movie/popular?api_key=8a1f71f93bc3ebd2776eab1af18a30bd&language=en-US');\n    setMovies(res.data.results);\n    setPageCount(500);\n  };\n  useEffect(() => {\n    getAllMovies();\n  }, []);\n  const onSearch = async word => {\n    const res = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=8a1f71f93bc3ebd2776eab1af18a30bd&i&query=${word}&language=en-US`);\n    if (!word) {\n      getAllMovies();\n      return;\n    }\n    setMovies(res.data.results);\n    setPageCount(res.data.total_pages);\n  };\n  const getPage = async num => {\n    const res = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=8a1f71f93bc3ebd2776eab1af18a30bd&language=en-US&page=${num}`);\n    setMovies(res.data.results);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"font color-bdy\",\n    children: [/*#__PURE__*/_jsxDEV(NavScrollExample, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(MoviesList, {\n              movies: movies,\n              getPage: getPage,\n              pageCount: pageCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/movie/:id\",\n            element: /*#__PURE__*/_jsxDEV(MovieDetails, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"77zmSBEQ2uRS2srzCHk4d2hs8K0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","NavScrollExample","Container","MoviesList","BrowserRouter","Routes","Route","axios","MovieDetails","jsxDEV","_jsxDEV","App","_s","movies","setMovies","pageCount","setPageCount","getAllMovies","res","get","data","results","onSearch","word","total_pages","getPage","num","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Ahmad/Desktop/react/movies/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport NavScrollExample from './components/NavBar'\nimport Container from 'react-bootstrap/esm/Container'\nimport MoviesList from './components/MoviesList'\nimport {BrowserRouter , Routes , Route} from 'react-router-dom'\nimport axios from 'axios'\nimport MovieDetails from './components/MovieDetails'\n\nconst App = () => {\n\n  const [movies , setMovies] = useState([]);\n  const [pageCount , setPageCount] = useState(0);\n\n  const getAllMovies = async()=>{\n    const res = await axios.get('https://api.themoviedb.org/3/movie/popular?api_key=8a1f71f93bc3ebd2776eab1af18a30bd&language=en-US');\n    setMovies(res.data.results);\n    setPageCount(500);\n  }\n  \n  useEffect(()=>{\n    getAllMovies();\n  } , [])\n\n  const onSearch = async(word)=>{\n    const res = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=8a1f71f93bc3ebd2776eab1af18a30bd&i&query=${word}&language=en-US`)\n    if(!word){\n      getAllMovies();\n      return;\n    }\n    setMovies(res.data.results);\n    setPageCount(res.data.total_pages);\n  }\n\n  const getPage = async(num) =>{\n    const res = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=8a1f71f93bc3ebd2776eab1af18a30bd&language=en-US&page=${num}`)\n    setMovies(res.data.results);\n  }\n\n  return (\n    <div className=\"font color-bdy\">\n      <NavScrollExample onSearch={onSearch} />\n      <Container>\n        <BrowserRouter>\n          <Routes>\n            <Route path='/' element = {<MoviesList movies={movies} getPage={getPage} pageCount={pageCount} />} />     \n            <Route path='/movie/:id' element = {<MovieDetails />} />\n          </Routes>\n        </BrowserRouter>\n      </Container>\n    </div>\n  );\n}\n\nexport default App\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}